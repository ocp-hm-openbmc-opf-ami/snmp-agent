/*
 * Note: this file originally auto-generated by mib2c
 * using mib2c.scalar.conf
 */

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>

#include <string>
#include <fstream>


#include <boost/system/error_code.hpp> // IWYU pragma: keep
#include <sdbusplus/asio/property.hpp>
#include <sdbusplus/message/native_types.hpp>


#include <array>
#include <cstddef>
#include <cstdint>
#include <filesystem>
#include <functional>
#include <regex>
#include <span>
#include <sstream>
#include <string>
#include <string_view>
#include <tuple>
#include <utility>
#include <variant>
#include <vector>


//using PropVariant = std::variant<std::string, float>;
using PropVariant = std::variant<std::string, double>;
using ObjProp = std::map<std::string,PropVariant>;
using ObjValue = std::map<std::string,ObjProp >;
using ObjUsr = std::map<sdbusplus::message::object_path, ObjValue>;

#ifndef NETSNMPEXAMPLESCALARS_H
#define NETSNMPEXAMPLESCALARS_H

/* function declarations */
void init_netSnmpExampleScalars(void);
Netsnmp_Node_Handler handle_amiSnmpInteger;
Netsnmp_Node_Handler handle_amiSnmpSleeper;
Netsnmp_Node_Handler handle_amiSnmpString;
Netsnmp_Node_Handler handle_amiSnmpFloat;
Netsnmp_Node_Handler handle_amiSnmpInlet_BRD_Temp;

#endif /* NETSNMPEXAMPLESCALARS_H */

ObjUsr getMapperObject(std::string path, std::string interface);
std::string getServiceName(std::string path, std::string intf);
double getSensorInfo(std::string path, std::string interface);
